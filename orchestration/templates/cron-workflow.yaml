apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: encode-ingest
spec:
  suspend: {{ not .Values.cron.enable }}
  schedule: {{ .Values.cron.schedule | quote }}
  timezone: {{ .Values.cron.timezone | quote }}
  concurrencyPolicy: Forbid
  workflowSpec:
    entrypoint: main
    serviceAccountName: {{ .Values.serviceAccount.k8sName }}
    podGC:
      strategy: OnWorkflowSuccess
    parallelism: {{ .Values.maxParallelism }}
    {{- $smokeTest := .Values.smokeTest.enable }}
    onExit: send-slack-notification
    templates:
      - name: main
        steps:
          - - name: run-main-template
              templateRef:
                name: {{ if $smokeTest }}process-encode-data{{ else }}ingest-encode-data{{ end }}
                template: main
              arguments:
                parameters:
                  - name: gcs-prefix
                    value: '{{ template "argo.timestamp" }}'
      - name: send-slack-notification
        container:
          image: curlimages/curl:7.70.0
          env:
            - name: WORKFLOW_ID
              value: '{{ "{{workflow.name}}" }}'
            - name: WORKFLOW_STATE
              value: '{{ "{{workflow.status}}" }}'
            - name: SLACK_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.smokeTest.slackUrl.secretName }}
                  key: {{ .Values.smokeTest.slackUrl.secretKey }}
          command: [curl]
          args:
            - -XPOST
            - -H
            - 'Content-type: application/json'
            - -H
            - 'Authorization: Bearer ${OAUTH_TOKEN}'
            - -d
            - '{"text": "*Encode-ingest {{ if $smokeTest }}(smoke test){{ else }}(prod){{ end }}:* Workflow $(WORKFLOW_ID) entered state: $(WORKFLOW_STATE)", "channel": "monster-ci"}'
            - "https://slack.com/api/chat.postMessage"
